-- vocabulary entries --------------------------------------------------------
  CREATE TABLE IF NOT EXISTS vocabulary_entries (
      entry_id              INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      word                  TEXT    NOT NULL,
      part_of_speech        TEXT    NOT NULL,
      english               TEXT,
      meaning               TEXT,
      examples              TEXT,
      themes                TEXT,
      source_table          TEXT    NOT NULL,
      source_created_time   TIMESTAMPTZ,
      extra                 JSONB
  );

  CREATE INDEX IF NOT EXISTS idx_vocabulary_entries_pos
      ON vocabulary_entries (part_of_speech);

  -- personal entries owner (nullable = global)
  ALTER TABLE vocabulary_entries
      ADD COLUMN IF NOT EXISTS user_owner TEXT REFERENCES users(user_id) ON DELETE SET NULL;
  CREATE INDEX IF NOT EXISTS idx_vocabulary_entries_owner
      ON vocabulary_entries (user_owner);

  -- progress ------------------------------------------------------------------
  CREATE TABLE IF NOT EXISTS flashcard_progress (
      progress_id     INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      entry_id        INTEGER NOT NULL UNIQUE
          REFERENCES vocabulary_entries(entry_id) ON DELETE CASCADE,
      status          TEXT    NOT NULL,
      times_seen      INTEGER NOT NULL,
      times_mastered  INTEGER NOT NULL,
      last_seen_at    TIMESTAMPTZ,
      created_at      TIMESTAMPTZ NOT NULL,
      updated_at      TIMESTAMPTZ NOT NULL
  );

  CREATE INDEX IF NOT EXISTS idx_flashcard_progress_status
      ON flashcard_progress (status);

  -- reviews -------------------------------------------------------------------
  CREATE TABLE IF NOT EXISTS flashcard_reviews (
      review_id    BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      entry_id     INTEGER NOT NULL
          REFERENCES vocabulary_entries(entry_id) ON DELETE CASCADE,
      result       TEXT    NOT NULL,
      notes        TEXT,
      reviewed_at  TIMESTAMPTZ NOT NULL
  );

  CREATE INDEX IF NOT EXISTS idx_flashcard_reviews_entry_id
      ON flashcard_reviews (entry_id);

-- multi-user support ---------------------------------------------------------
  CREATE TABLE IF NOT EXISTS users (
      user_id TEXT PRIMARY KEY,
      email   TEXT,
      name    TEXT,
      created_at TIMESTAMPTZ DEFAULT NOW()
  );

  CREATE TABLE IF NOT EXISTS user_flashcard_progress (
      progress_id     BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      user_id         TEXT NOT NULL REFERENCES users(user_id) ON DELETE CASCADE,
      entry_id        INTEGER NOT NULL REFERENCES vocabulary_entries(entry_id) ON DELETE CASCADE,
      status          TEXT    NOT NULL,
      times_seen      INTEGER NOT NULL,
      times_mastered  INTEGER NOT NULL,
      last_seen_at    TIMESTAMPTZ,
      created_at      TIMESTAMPTZ NOT NULL,
      updated_at      TIMESTAMPTZ NOT NULL,
      UNIQUE(user_id, entry_id)
  );

  CREATE INDEX IF NOT EXISTS idx_user_flashcard_progress_user
      ON user_flashcard_progress (user_id);

  CREATE TABLE IF NOT EXISTS user_flashcard_reviews (
      review_id    BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      user_id      TEXT NOT NULL REFERENCES users(user_id) ON DELETE CASCADE,
      entry_id     INTEGER NOT NULL REFERENCES vocabulary_entries(entry_id) ON DELETE CASCADE,
      result       TEXT    NOT NULL,
      notes        TEXT,
      reviewed_at  TIMESTAMPTZ NOT NULL
  );

  CREATE INDEX IF NOT EXISTS idx_user_flashcard_reviews_user
      ON user_flashcard_reviews (user_id);

-- user daily check-ins --------------------------------------------------------
  CREATE TABLE IF NOT EXISTS user_checkins (
      user_id    TEXT NOT NULL REFERENCES users(user_id) ON DELETE CASCADE,
      day        DATE NOT NULL,
      checked_at TIMESTAMPTZ NOT NULL,
      PRIMARY KEY(user_id, day)
  );

  CREATE INDEX IF NOT EXISTS idx_user_checkins_user ON user_checkins (user_id, day);
